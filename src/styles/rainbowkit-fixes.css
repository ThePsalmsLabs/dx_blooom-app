/* 
 * Complete RainbowKit Modal Visibility Fix
 * File: src/styles/rainbowkit-fixes.css (create this new file)
 * 
 * This CSS file addresses common RainbowKit modal visibility issues.
 * Import this file in your layout.tsx or globals.css AFTER the RainbowKit CSS import.
 */

/* 
 * Fix 1: Ensure RainbowKit Modal Container Has Maximum Z-Index
 * 
 * Sometimes other components in your app have high z-index values that cover
 * the RainbowKit modal. This forces RainbowKit's modal to always be on top.
 */
 [data-rk] {
    /* Force maximum z-index for all RainbowKit elements */
    z-index: 999999 !important;
  }
  
  /* 
   * Fix 2: RainbowKit Modal Backdrop and Container
   * 
   * These selectors target RainbowKit's internal modal structure and ensure
   * proper visibility, positioning, and layering.
   */
  div[data-rk="modal-overlay"] {
    /* Ensure the overlay backdrop is visible and positioned correctly */
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: 0 !important;
    z-index: 999998 !important;
    background: rgba(0, 0, 0, 0.3) !important;
    backdrop-filter: blur(4px) !important;
  }
  
  div[data-rk="modal-container"] {
    /* Ensure the modal container is properly positioned and visible */
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: 0 !important;
    z-index: 999999 !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    padding: 16px !important;
    pointer-events: auto !important;
    opacity: 1 !important;
    visibility: visible !important;
  }
  
  /* 
   * Fix 3: RainbowKit Modal Content
   * 
   * This ensures the actual modal content (wallet selection, etc.) is visible
   * and properly styled, even if other CSS is interfering.
   */
  div[data-rk="modal-content"] {
    /* Force visibility of modal content */
    opacity: 1 !important;
    visibility: visible !important;
    transform: none !important;
    position: relative !important;
    z-index: 1 !important;
    
    /* Ensure proper dimensions and layout */
    max-width: 390px !important;
    width: 100% !important;
    max-height: 90vh !important;
    
    /* Background and styling */
    background: white !important;
    border-radius: 12px !important;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25) !important;
    
    /* Ensure it's interactive */
    pointer-events: auto !important;
  }
  
  /* 
   * Fix 4: Dark Mode Support
   * 
   * If your app uses dark mode, ensure RainbowKit modals are properly styled.
   */
  @media (prefers-color-scheme: dark) {
    div[data-rk="modal-content"] {
      background: #1f2937 !important;
      color: white !important;
    }
  }
  
  /* 
   * Fix 5: Mobile Responsiveness
   * 
   * Ensure RainbowKit modals work properly on mobile devices.
   */
  @media (max-width: 768px) {
    div[data-rk="modal-container"] {
      padding: 8px !important;
    }
    
    div[data-rk="modal-content"] {
      max-width: 100% !important;
      margin: 0 !important;
    }
  }
  
  /* 
   * Fix 6: Animation and Transition Override
   * 
   * Sometimes conflicting animations can cause modals to appear off-screen.
   * This ensures smooth, visible animations.
   */
  div[data-rk="modal-overlay"],
  div[data-rk="modal-container"],
  div[data-rk="modal-content"] {
    transition: all 0.2s ease-in-out !important;
  }
  
  /* When modal is opening */
  div[data-rk="modal-overlay"][data-state="open"],
  div[data-rk="modal-container"][data-state="open"] {
    opacity: 1 !important;
    visibility: visible !important;
  }
  
  /* When modal is closing */
  div[data-rk="modal-overlay"][data-state="closed"],
  div[data-rk="modal-container"][data-state="closed"] {
    opacity: 0 !important;
    visibility: hidden !important;
  }
  
  /* 
   * Fix 7: Wallet Option Buttons
   * 
   * Ensure individual wallet connection buttons are visible and clickable.
   */
  button[data-rk="wallet-option"] {
    opacity: 1 !important;
    visibility: visible !important;
    pointer-events: auto !important;
    display: flex !important;
  }
  
  /* 
   * Fix 8: RainbowKit Connect Button Styling
   * 
   * Ensure the connect button itself is properly styled and visible.
   */
  button[data-rk="connect-button"] {
    opacity: 1 !important;
    visibility: visible !important;
    pointer-events: auto !important;
  }
  
  /* 
   * Fix 9: Portal Container Override
   * 
   * Sometimes portal containers don't render in the right place.
   * This ensures RainbowKit portals render at the document root.
   */
  #rainbowkit-portal {
    position: relative !important;
    z-index: 999999 !important;
  }
  
  /* 
   * Fix 10: Debugging Helper (Remove in Production)
   * 
   * Uncomment these lines if you need to debug modal positioning.
   * They add visible borders to RainbowKit elements.
   */
  /*
  [data-rk] {
    border: 2px solid red !important;
  }
  
  div[data-rk="modal-container"] {
    border: 5px solid blue !important;
  }
  
  div[data-rk="modal-content"] {
    border: 3px solid green !important;
  }
  */
  
  /* 
   * Fix 11: Specific App Layout Compatibility
   * 
   * These rules ensure RainbowKit modals work with your specific AppLayout.
   */
  .rainbowkit-modal-fix {
    /* Add this class to your body element if needed */
    overflow: hidden;
  }
  
  /* Ensure RainbowKit modals appear above your app's header and navigation */
  header,
  nav,
  .app-header,
  .app-navigation {
    z-index: 50 !important; /* Keep your app elements below RainbowKit */
  }
  
  /* 
   * Fix 12: Font and Text Rendering
   * 
   * Ensure text in RainbowKit modals is readable and properly styled.
   */
  div[data-rk="modal-content"] * {
    font-family: inherit !important;
    line-height: inherit !important;
  }
  
  /* 
   * Fix 13: Scrolling and Overflow
   * 
   * Prevent background scrolling when modal is open and ensure modal content scrolls properly.
   */
  body:has(div[data-rk="modal-container"]) {
    overflow: hidden !important;
  }
  
  div[data-rk="modal-content"] {
    overflow-y: auto !important;
    max-height: 90vh !important;
  }